{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","postId","deletePost","likesCount","message","className","styles","item","alt","src","onClick","Textarea","FormElement","maxLength15","maxLength","MyPosts","React","memo","posts","addPost","postsElements","map","post","key","id","postsBlock","AddPostFormRedux","onSubmit","values","newPostBody","reduxForm","form","props","handleSubmit","Field","component","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileFormReduxForm","profile","error","Input","TextArea","type","Object","keys","contacts","contact","formSummaryError","ProfileData","isOwner","enableEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","updateProfile","saveProfilePhoto","descriptionBlock","mainPhoto","photos","large","Avatar","target","files","length","profileInfo","formData","then","initialValues","Preloader","Profile","shouldComponentUpdate","nextProps","this","Component","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.7d63cef0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__15ZKC\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2O6zm\",\"profileInfo\":\"ProfileInfo_profileInfo__2bBQk\",\"contacts\":\"ProfileInfo_contacts__1WVq0\",\"contact\":\"ProfileInfo_contact__3ON-w\",\"formSummaryError\":\"ProfileInfo_formSummaryError__FKhzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__34G5E\",\"posts\":\"MyPosts_posts__3WoNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__WIIvl\"};","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = ({postId, deletePost, likesCount, message}) => {\r\n  const onDeletePost = () => {\r\n    deletePost(postId)\r\n  }\r\n  return (\r\n    <div className={styles.item}>\r\n      <img alt=\"\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS7gWgbjQAFX_eF1tCmcevXjx2XthnmQGTe8tqKTVMhkK-fBabx&usqp=CAU\" />\r\n      {message}\r\n      <div>\r\n        <span>\r\n          likes: {likesCount}\r\n          </span>\r\n      </div>\r\n      <div><button onClick={onDeletePost}>Delete Post</button></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLength } from \"../../../utilities/validators\"\r\nimport { FormElement } from \"../../FormsControl/FormsControl\";\r\n\r\nlet Textarea = FormElement('textarea')\r\nexport const maxLength15 = maxLength(15)\r\n\r\nconst MyPosts = React.memo(({posts, addPost, deletePost}) => {\r\n  let postsElements = posts.map((post) => (\r\n    <Post key={post.id} message={post.message} likesCount={post.likesCount} deletePost={deletePost} postId={post.id}/>\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    addPost(values.newPostBody);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          placeholder=\"Post message\"\r\n          name={\"newPostBody\"}     \r\n          validate={[required, maxLength15]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: 'profileAddPostForm'})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import { addPost, deletePost } from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n  deletePost\r\n})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n  \r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n\r\n  }\r\n\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode} >\r\n           <b>Status</b>: {props.status || '------'}\r\n          </span>\r\n        </div>\r\n      }\r\n      { editMode &&\r\n        <div>\r\n          <input\r\n            placeholder={'Введите статус'}\r\n            autoFocus\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { FormElement } from '../../FormsControl/FormsControl'\r\nimport { required } from '../../../utilities/validators'\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  let Input = FormElement('input')\r\n  let TextArea = FormElement('textarea')\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <b>Full Name</b>: \r\n        <Field component={Input} name=\"fullName\" placeholder=\"Full Name\" validate={[required]} />\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: \r\n        <Field component={Input} name=\"lookingForAJob\" type='checkbox' validate={[required]} />\r\n      </div>\r\n      <div>\r\n        <b>My Profession skills</b>: \r\n        <Field placeholder=\"JS CSS3 HTML5\" component={TextArea} name=\"lookingForAJobDescription\" validate={[required]} />\r\n      </div>\r\n      <div>\r\n        <b>About Me</b>: \r\n        <Field placeholder=\"about me\" component={Input} name=\"aboutMe\" validate={[required]} />\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n          return <div key={key} className={styles.contact}>\r\n            <b>{key}</b>: <Field key={key} component={Input} name={\"contacts.\" + key} placeholder={key} />\r\n          </div>\r\n        })}\r\n      </div>\r\n      {error && \r\n      <div className={styles.formSummaryError}>\r\n          {error}\r\n      </div>}\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ProfileFormReduxForm = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\n\r\n\r\nexport default ProfileFormReduxForm","import React, { useState } from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Avatar from \"../../../assets/avatar.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nconst ProfileInfo = ({ profile, isOwner, status, updateStatus, updateProfile, saveProfilePhoto}) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const onSubmit = (formData) => {\r\n    updateProfile(formData)\r\n      .then(() => {\r\n      setEditMode(false)\r\n      })\r\n  }\r\n\r\n  const onMainPhotoSeleceted = (event) => {\r\n    if (event.target.files.length) {\r\n      saveProfilePhoto(event.target.files[0])\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={styles.descriptionBlock}>\r\n        <div className={styles.mainPhoto}>\r\n          <img alt=\"\" src={profile.photos.large || Avatar} />\r\n          {isOwner && <input type=\"file\" onChange={onMainPhotoSeleceted} />}\r\n        </div>\r\n        <div className={styles.profileInfo}>\r\n          {editMode             \r\n            ? <ProfileDataForm profile={profile} onSubmit={onSubmit} initialValues={profile} setEditMode={() => setEditMode(false)}/> \r\n            : <ProfileData updateStatus={updateStatus} status={status} profile={profile} isOwner={isOwner} enableEditMode={() => setEditMode(true)} /> \r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, status, updateStatus, enableEditMode}) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <b>Full Name</b>: {profile.fullName}\r\n      </div>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My Profession skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About Me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div className={styles.contacts}>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {isOwner && <button onClick={enableEditMode}>edit</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nclass Profile extends React.Component {\r\n\r\n  shouldComponentUpdate = (nextProps) => {\r\n    if (nextProps !== this.props) {\r\n      return true\r\n    }  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ProfileInfo\r\n          isOwner={this.props.isOwner}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          updateProfile={this.props.updateProfile}\r\n          saveProfilePhoto={this.props.saveProfilePhoto}\r\n        />\r\n        <MyPostsContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus, updateProfile, saveProfilePhoto } from \"../../Redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) { \r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    } \r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n        <Profile \r\n          {...this.props}\r\n          isOwner={!this.props.match.params.userId}\r\n          profile={this.props.profile} \r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          updateProfile={this.props.updateProfile}\r\n          saveProfilePhoto={this.props.saveProfilePhoto}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, saveProfilePhoto, getStatus, updateStatus, updateProfile }),\r\n  withRouter)\r\n  (ProfileContainer)\r\n\r\n"],"sourceRoot":""}