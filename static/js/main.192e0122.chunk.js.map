{"version":3,"sources":["Components/hoc/withAuthRedirect.js","Redux/dialogsReducer.js","assets/preloader.gif","Components/common/Preloader/Preloader.module.sass","Components/Login/Login.module.css","Redux/api/api.js","Components/Navbar/Navbar.module.css","serviceWorker.js","Components/Music/Music.jsx","Components/News/News.jsx","Components/Options/Options.jsx","Components/Navbar/Navbar.jsx","Components/common/Paginator/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","Redux/usersReducer.js","Redux/UsersSelectors.js","Components/Users/UsersContainer.jsx","Components/Header/Header.jsx","Redux/authReducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Redux/appReducer.js","Redux/navbarReducer.js","Redux/sidebarReducer.js","Redux/redux-store.js","Components/hoc/withSuspense.js","App.js","index.js","Components/common/Preloader/Preloader.jsx","Components/Header/Header.module.css","utilities/validators.js","Components/common/Paginator/Paginator.module.sass","Components/Users/user.module.css","Components/FormsControl/FormsControl.module.css","Components/FormsControl/FormsControl.jsx","Redux/profileReducer.js","assets/avatar.png"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","SEND_MESSAGE","initialState","messages","id","message","dialogs","name","sendMessage","newMessageBody","type","dialogsReducer","action","module","exports","axios","Axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","a","currentPage","pageSize","get","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","updateProfileInfo","profileInfo","saveProfilePhoto","photoFile","formData","FormData","append","authAPI","authMe","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","Boolean","window","location","hostname","match","Music","News","Options","Navbar","className","styles","nav","item","activeClassName","activeLink","Paginator","onPageChanged","totalItemsCount","portionSize","pages","pagesCount","Math","ceil","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","page","map","key","cn","selectedPage","paginator__page","User","user","followingInProgress","userProfile","avatar","src","photos","small","userPhoto","alt","followed","disabled","some","description","Users","isFetching","users","Preloader","followSuccess","unfollowSuccess","setCurrentPage","setTotalItemsCount","toggleIsFetching","toggleFollowingProgress","usersReducer","getPageSize","usersPage","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","createSelector","u","UsersContainer","componentDidMount","pageNumber","compose","dispatch","resultCode","setTotalUsersCount","items","totalCount","Header","header","mainTitle","loginBlock","loginName","captchaUrl","isLogging","getCaptchaUrlSuccess","payload","setIsLogging","setAuthUserData","getAuthUserData","url","authReducer","HeaderContainer","Input","FormElement","maxLength30","maxLength","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","validate","required","formSummaryError","Login","length","stopSubmit","_error","initialized","appReducer","navbarReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","navbarPage","sidebarPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledRejection","promiseRejectionEvent","console","log","initializeApp","addEventListener","removeEventListener","exact","from","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","preloader","value","undefined","Element","input","meta","touched","autoFocus","hasError","formControl","posts","likesCount","profile","deletePost","postId","addPost","newText","setStatus","getUserProfile","updateProfile","getState","field","split","slice","toLowerCase","reject"],"mappings":"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","file":"static/js/main.192e0122.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n      \r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","const SEND_MESSAGE = 'dialogs/ADD-DIALOG-MESSAGE'\r\n\r\nlet initialState = {\r\n  messages: [\r\n    {id: 1,message: 'Hi'},\r\n    {id: 2,message: 'How are you?'},\r\n    {id: 3,message: 'Yo'},\r\n    {id: 4,message: 'Yo'},\r\n    {id: 5,message: 'Yo'},\r\n    {id: 6,message: 'How are you?'},\r\n    {id: 7,message: 'How are you?'},\r\n    {id: 8,message: 'What\\' your name?'},\r\n  ],\r\n\r\n  dialogs: [\r\n    {id: 1, name: 'Dima'},\r\n    {id: 2, name: 'Andrey'},\r\n    {id: 3, name: 'Sasha'},\r\n    {id: 4, name: 'Victor'},\r\n    {id: 5, name: 'Valera'}\r\n  ],\r\n}\r\nlet id = 9;\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n       return {\r\n        ...state,\r\n        messages: [...state.messages, {id: ++id, message: action.newMessageBody}],\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessage = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\nexport default dialogsReducer\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.e4b6323e.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__ymNqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__grqd9\"};","import Axios from \"axios\";\r\n\r\nconst axios = Axios.create({  \r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"4df29c85-3f77-4244-a766-7b3c2a94e24d\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers: async (currentPage = 1, pageSize = 100) => {\r\n    const response = await axios.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    return response.data;\r\n  },\r\n\r\n  follow: async userId => {\r\n    const response = await axios.post(`follow/${userId}`)\r\n    return response.data\r\n  },\r\n\r\n  unfollow: async userId => {\r\n    const response = await axios.delete(`follow/${userId}`)\r\n    return response.data\r\n  },\r\n} \r\n\r\nexport const profileAPI = {\r\n  getProfile: async userId => {\r\n    let response = await axios.get(`profile/${userId}`)\r\n    return response.data\r\n  },\r\n  \r\n  getStatus: async userId => {\r\n    let response = await axios.get(`profile/status/${userId}`)\r\n    return response;\r\n  },\r\n\r\n  updateStatus: async (status) => {\r\n    let response = await axios.put(`profile/status/`, {\r\n      status: status\r\n    })\r\n    return response\r\n  },\r\n\r\n  updateProfileInfo: async (profileInfo) => {\r\n    let response = await axios.put('profile', profileInfo)\r\n    return response\r\n  },\r\n\r\n  saveProfilePhoto: async (photoFile) => {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", photoFile)\r\n    let response = await axios.put('profile/photo', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    return response\r\n  }\r\n}\r\n\r\nexport const authAPI  = {\r\n  authMe: async () => {\r\n    let response = await axios.get('auth/me')\r\n    return response.data\r\n  },\r\n\r\n  login: async (email, password, rememberMe = false, captcha = null) => {\r\n    let response = await axios.post('auth/login', {\r\n      email,\r\n      password,\r\n      rememberMe,\r\n      captcha\r\n    })\r\n    return response\r\n  },\r\n\r\n  logout: async () => {\r\n    let response = await axios.delete('auth/login')\r\n    return response\r\n  }\r\n}\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl: async () => {\r\n    return axios.get('security/get-captcha-url')\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3AgLY\",\"item\":\"Navbar_item__3juqs\",\"activeLink\":\"Navbar_activeLink__3FCLg\",\"friends\":\"Navbar_friends__1d9fT\",\"title\":\"Navbar_title__RTzQo\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\nconst Music = props => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\n\r\nconst News = props => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News","import React from 'react'\r\n\r\nconst Options = props => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Options","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n\r\n  return (\r\n    <nav className={styles.nav}>\r\n        <NavLink className={styles.item} activeClassName={styles.activeLink} to=\"/profile\">Profile</NavLink>\r\n        <NavLink className={styles.item} activeClassName={styles.activeLink} to='/users'>Friends</NavLink> \r\n        <NavLink className={styles.item} activeClassName={styles.activeLink} to=\"/dialogs\">Messages</NavLink>\r\n        <NavLink className={styles.item} activeClassName={styles.activeLink} to=\"/news\">News</NavLink>\r\n        <NavLink className={styles.item} activeClassName={styles.activeLink} to='/music'>Music</NavLink>\r\n        <NavLink className={styles.item} activeClassName={styles.activeLink} to='/settings'>Settings</NavLink>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.sass\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({\r\n  onPageChanged,\r\n  currentPage,\r\n  totalItemsCount,\r\n  pageSize,\r\n  portionSize = 10,\r\n}) => {\r\n  let pages = [];\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button onClick={() => setPortionNumber(portionNumber - 1)}>\r\n          PREV\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (page) =>\r\n            page >= leftPortionPageNumber && page <= rightPortionPageNumber\r\n        )\r\n        .map((page) => {\r\n          return (\r\n            <span\r\n              key={page}\r\n              onClick={() => {\r\n                onPageChanged(page);\r\n              }}\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === page,\r\n                },\r\n                styles.paginator__page\r\n              )}\r\n            >\r\n              {page + \" \"}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button onClick={() => setPortionNumber(portionNumber + 1)}>\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./user.module.css\";\r\nimport userPhoto from \"../../assets/avatar.png\";\r\n\r\nconst User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  return (\r\n    <div key={user.id} className={styles.userProfile}>\r\n      <div className={styles.avatar}>\r\n        <div>\r\n          <NavLink to={`/profile/${user.id}`}>\r\n            <img\r\n              src={user.photos.small != null ? user.photos.small : userPhoto}\r\n              alt=\"\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => unfollow(user.id)}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => follow(user.id)}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={styles.description}>\r\n        <div>{user.name}</div>\r\n        <div>{user.status}</div>\r\n        <div>{\"user.location.country\"}</div>\r\n        <div>{\"user.location.city\"}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nlet Users = ({ isFetching, users, followingInProgress,\r\n  unfollow, follow,\r\n  totalItemsCount, pageSize, onPageChanged, currentPage\r\n  }) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        totalItemsCount={totalItemsCount}\r\n        pageSize={pageSize}\r\n        onPageChanged={onPageChanged}\r\n        currentPage={currentPage}\r\n      />\r\n      <div>\r\n        {isFetching && <Preloader />}\r\n        {users.map((user) => {\r\n          return (\r\n            <User\r\n              key={user.id}\r\n              user={user}\r\n              followingInProgress={followingInProgress}\r\n              unfollow={unfollow}\r\n              follow={follow}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { usersAPI } from \"./api/api\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst UNMOUNT_USERS = 'UNMOUNT_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 50,\r\n  totalItemsCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  \r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return { \r\n        ...state, \r\n        users: state.users.map(user => {\r\n          return user.id === action.userId ? {...user, followed: true } : user\r\n        })\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => {\r\n          return user.id === action.userId ? {...user, followed: false } : user\r\n        })\r\n      }\r\n      \r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.users]\r\n      }\r\n\r\n    case UNMOUNT_USERS:\r\n      return {\r\n        ...state,\r\n        users: []\r\n      }\r\n\r\n    case SET_CURRENT_PAGE: \r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n        users: []\r\n      }\r\n\r\n    case SET_TOTAL_ITEMS_COUNT: \r\n      return {\r\n        ...state,\r\n        totalItemsCount: action.totalItemsCount\r\n      }\r\n\r\n    case TOGGLE_IS_FETCHING: \r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: \r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\n\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\n\r\nexport const setUsers = users => ({ type: SET_USERS, users })\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const setTotalItemsCount = totalItemsCount => ({type: SET_TOTAL_ITEMS_COUNT, totalItemsCount })\r\n\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => async dispatch => {\r\n  dispatch(toggleIsFetching(true))\r\n  dispatch(setCurrentPage(page))\r\n  const data = await usersAPI.getUsers(page, pageSize)\r\n\r\n  dispatch(toggleIsFetching(false))\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setTotalItemsCount(data.totalCount))\r\n}\r\n\r\nexport const follow = userId => async dispatch => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const data = await usersAPI.follow(userId)\r\n    \r\n    if (data.resultCode === 0) {\r\n      dispatch(followSuccess(userId)) \r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = userId => async dispatch => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const data = await usersAPI.unfollow(userId)\r\n\r\n    if (data.resultCode === 0) {\r\n      dispatch(unfollowSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport default usersReducer","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersSelector = (state) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalItemsCount = (state) => {\r\n  return state.usersPage.totalItemsCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter(u => true)\r\n})","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {\r\n  setCurrentPage,\r\n  setTotalItemsCount,\r\n  toggleFollowingProgress,\r\n  requestUsers,\r\n  follow,\r\n  unfollow,\r\n} from \"../../Redux/usersReducer\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getTotalItemsCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress,\r\n} from \"../../Redux/UsersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount = () => {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  };\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const { pageSize } = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Users\r\n        users={this.props.users}\r\n        pageSize={this.props.pageSize}\r\n        totalItemsCount={this.props.totalItemsCount}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        isFetching={this.props.isFetching}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followingInProgress={this.props.followingInProgress}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalItemsCount: getTotalItemsCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    setTotalUsersCount: setTotalItemsCount,\r\n    toggleFollowingProgress,\r\n    getUsers: requestUsers,\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer);\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = ({ isAuth, logout, login }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Inkscape.logo.svg/390px-Inkscape.logo.svg.png\"\r\n        alt=\"background\"\r\n      />\r\n      <h1 className={styles.mainTitle}>Friends</h1>\r\n      <div className={styles.loginBlock}>\r\n        {isAuth ? (\r\n          <div>\r\n            <p className={styles.loginName}>Login: {login}</p>\r\n            <button onClick={logout}>Logout</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { authAPI, securityAPI } from \"./api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS' \r\nconst SET_IS_LOGGING = 'auth/SET_IS_LOGGING'\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null, // if null, then captcha is not required\r\n  isLogging: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        captchaUrl: action.payload\r\n      }\r\n\r\n    case SET_IS_LOGGING:\r\n      return {\r\n        ...state,\r\n        isLogging: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS, payload: captchaUrl\r\n})\r\n\r\nconst setIsLogging = (isLogging) => ({\r\n  type: SET_IS_LOGGING, payload: isLogging\r\n})\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => \r\n  ({type: SET_AUTH_USER_DATA, payload: {userId, email, login, isAuth}})\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  const response = await authAPI.authMe();\r\n  \r\n  if (response.resultCode === 0) {\r\n    let { id, email, login } = response.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n} \r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha = null) => async dispatch => {\r\n  dispatch(setIsLogging(true))\r\n  const response = await authAPI.login(email, password, rememberMe, captcha)\r\n  dispatch(setIsLogging(false))\r\n  if (response.data.resultCode === 0) {\r\n    // success, get auth data\r\n      dispatch(getAuthUserData())\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl())\r\n    }\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\"\r\n    dispatch(stopSubmit(\"login\", {_error: message}))\r\n  }\r\n} \r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch(setIsLogging(true))\r\n  const response = await authAPI.logout()\r\n  dispatch(setIsLogging(false))\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaUrl()\r\n  const captchaUrl = response.data.url\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { FormElement } from \"../FormsControl/FormsControl\";\r\nimport { required, maxLength } from \"../../utilities/validators\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nconst Input = FormElement(\"input\");\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl, isLogging }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Email\"}\r\n          name={\"email\"}\r\n          component={Input}\r\n          validate={[required, maxLength30]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          type=\"password\"\r\n          placeholder={\"Password\"}\r\n          name={\"password\"}\r\n          component={Input}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={Input} name={\"rememberMe\"} type=\"checkbox\" />\r\n        <span>remember me</span>\r\n      </div>\r\n\r\n      {captchaUrl && (\r\n        <div>\r\n          <img alt=\"captcha\" src={captchaUrl} name=\"captcha\" />\r\n          <Field component={Input} name={\"captcha\"} />\r\n        </div>\r\n      )}\r\n      {error && <div className={styles.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <button disabled={isLogging}>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = ({ login, isAuth, captchaUrl, isLogging }) => {\r\n  const onSubmit = (formData) => {\r\n    let { email, password, rememberMe, captcha } = formData;\r\n    login(email, password, rememberMe, captcha);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm\r\n          isLogging={isLogging}\r\n          onSubmit={onSubmit}\r\n          captchaUrl={captchaUrl}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","import { connect } from \"react-redux\";\r\nimport { login } from \"../../Redux/authReducer\";\r\nimport Login from \"./Login\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n  isLogging: state.auth.isLogging,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS' \r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initializeApp = () => async dispatch => {\r\n  let promise = await dispatch(getAuthUserData())\r\n  await Promise.all([promise])\r\n  dispatch(initializedSuccess())\r\n} \r\n\r\nexport default appReducer","let initialState = {\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default navbarReducer","let initialState = {\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  navbarPage: navbarReducer,\r\n  sidebarPage: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers, composeEnhancers(applyMiddleware(thunk)));\r\n// let store = createStore(reducers, applyMiddleware(thunk));\r\nexport default store\r\n","import React, { Suspense } from 'react'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nconst withSuspense = Component => props => {\r\n  return (\r\n    <Suspense fallback={<Preloader />}>\r\n      <Component {...props}/>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default withSuspense","import React from 'react';\nimport './App.css';\nimport { Route, withRouter, HashRouter, Switch, Redirect } from 'react-router-dom';\nimport Music from './Components/Music/Music';\nimport News from './Components/News/News';\nimport Options from './Components/Options/Options';\nimport Navbar from './Components/Navbar/Navbar';\nimport Users from './Components/Users/UsersContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Login from './Components/Login/LoginContainer';\nimport { connect, Provider } from 'react-redux';\nimport {initializeApp} from './Redux/appReducer'\nimport { compose } from 'redux';\nimport Preloader from './Components/common/Preloader/Preloader';\nimport store from './Redux/redux-store';\nimport withSuspense from './Components/hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'))\n\nclass App extends React.Component {\n  catchAllUnhandledRejection = (promiseRejectionEvent) => {\n    console.log(\"ERROR\")\n  }\n  \n  componentDidMount() {\n    this.props.initializeApp()\n    window.addEventListener(\"unhandledrejection\", (promiseRejectionEvent) => {\n      this.catchAllUnhandledRejection(promiseRejectionEvent)\n    })\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"unhandledrejection\", (promiseRejectionEvent) => {\n      this.catchAllUnhandledRejection(promiseRejectionEvent)\n    })\n  }\n\n  render() {\n    if (!this.props.initialized) return <Preloader />\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/profile\" />\n            <Route path='/profile/:userId?' \n                  render={withSuspense(ProfileContainer) }\n            />\n            <Route path='/dialogs' \n                  render={withSuspense(DialogsContainer) }\n            />\n            <Route path='/news' render={() => <News /> } />\n            <Route path='/music' render={() => <Music /> } />\n            <Route path='/settings' render={() => <Options /> } />\n            <Route path='/users' render={() => <Users /> } /> \n            <Route path='/login' render={() => <Login /> } /> \n            <Route path='*' render={() => <div><h1>404 PAGE NOT FOUND</h1></div>} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({initialized: state.app.initialized}) \n\nlet AppContainer = compose(\n  withRouter, \n  connect(mapStateToProps, {initializeApp}))(App)\n\n\nconst MainApp = (props) => {\n  return (\n    <HashRouter >\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n  )\n}\n\nexport default MainApp","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\n\nReactDOM.render(\n  <MainApp />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport preloader from \"../../../assets/preloader.gif\";\r\nimport styles from \"./Preloader.module.sass\";\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div className={styles.preloader}>\r\n      <img src={preloader} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Mcrm\",\"mainTitle\":\"Header_mainTitle__MhfWw\",\"loginBlock\":\"Header_loginBlock__691tf\"};","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n  \r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    return value && value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1ZKas\",\"paginator__page\":\"Paginator_paginator__page__KixJr\",\"buttonVisible\":\"Paginator_buttonVisible__3CYlL\",\"selectedPage\":\"Paginator_selectedPage__2Vw_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProfile\":\"user_userProfile__2n83y\",\"avatar\":\"user_avatar__2rsbK\",\"description\":\"user_description__3rbx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2157c\",\"error\":\"FormsControl_error__3WUbA\"};","import React from \"react\";\r\nimport styles from \"./FormsControl.module.css\";\r\n\r\nexport const FormElement = (Element) => ({\r\n  input,\r\n  meta: { touched, error },\r\n  type,\r\n  placeholder,\r\n  autoFocus = false,\r\n}) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <Element\r\n        {...input}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        autoFocus={autoFocus}\r\n      />\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","import { profileAPI } from \"./api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n    {id: 2, message: 'It\\'s my first post', likesCount: 20},\r\n  ],\r\n  profile: null,\r\n  status: '',\r\n}\r\n\r\nlet id = 3;\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\n    case ADD_POST: \r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, {id: ++id, message: action.newText, likesCount: 10}],\r\n      }\r\n\r\n    case SET_USER_PROFILE: \r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_STATUS: \r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post.id !== action.postId)\r\n      }\r\n\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const deletePost = postId => ({type: DELETE_POST, postId})\r\nexport const addPost = (newText) => ({ type: ADD_POST, newText })\r\nexport const updateNewPostText = text => ({ type: UPDATE_NEW_POST_TEXT, newText: text }) \r\nexport const setStatus = status => ({ type: SET_STATUS, status })\r\nconst setUserProfile = profile => ({ type: SET_USER_PROFILE, profile })\r\n\r\nexport const getUserProfile =  userId => async dispatch => {\r\n  const data = await profileAPI.getProfile(userId)\r\n  dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = userId => async dispatch => {\r\n  const response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = status => async dispatch => {\r\n  let response = await profileAPI.updateStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status))\r\n  }\r\n}\r\n\r\nexport const updateProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId\r\n  let response = await profileAPI.updateProfileInfo(profile)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId))\r\n  } else {\r\n    let field = response.data.messages[0];\r\n    field = field.split('->')[1].slice(0, -1).toLowerCase()\r\n    dispatch(stopSubmit(\"editProfile\",{\"contacts\": {[field]: 'Invalid Format'}}))\r\n    return Promise.reject()  \r\n  }\r\n}\r\n\r\nexport const saveProfilePhoto = (photoFile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId\r\n  let response = await profileAPI.saveProfilePhoto(photoFile)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId))\r\n  }\r\n}\r\nexport default profileReducer\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar.2e81f97e.png\";"],"sourceRoot":""}