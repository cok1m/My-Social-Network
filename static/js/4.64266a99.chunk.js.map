{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","postId","deletePost","likesCount","message","className","styles","item","alt","src","onClick","Textarea","FormElement","maxLength15","maxLength","MyPosts","React","memo","posts","addPost","postsElements","map","post","key","id","postsBlock","AddPostFormRedux","onSubmit","values","newPostBody","reduxForm","form","props","handleSubmit","Field","component","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileInfo","profile","Preloader","contacts","descriptionBlock","photos","large","Avatar","fullName","lookingForAJobDescription","aboutMe","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Profile","shouldComponentUpdate","nextProps","this","Component","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.64266a99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__34G5E\",\"posts\":\"MyPosts_posts__3WoNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__WIIvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__15ZKC\",\"contacts\":\"ProfileInfo_contacts__1WVq0\"};","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = ({postId, deletePost, likesCount, message}) => {\r\n  const onDeletePost = () => {\r\n    deletePost(postId)\r\n  }\r\n  return (\r\n    <div className={styles.item}>\r\n      <img alt=\"\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS7gWgbjQAFX_eF1tCmcevXjx2XthnmQGTe8tqKTVMhkK-fBabx&usqp=CAU\" />\r\n      {message}\r\n      <div>\r\n        <span>\r\n          likes: {likesCount}\r\n          </span>\r\n      </div>\r\n      <div><button onClick={onDeletePost}>Delete Post</button></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLength } from \"../../../utilities/validators\"\r\nimport { FormElement } from \"../../FormsControl/FormsControl\";\r\n\r\nlet Textarea = FormElement('textarea')\r\nexport const maxLength15 = maxLength(15)\r\n\r\nconst MyPosts = React.memo(({posts, addPost, deletePost}) => {\r\n  let postsElements = posts.map((post) => (\r\n    <Post key={post.id} message={post.message} likesCount={post.likesCount} deletePost={deletePost} postId={post.id}/>\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    addPost(values.newPostBody);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          placeholder=\"Post message\"\r\n          name={\"newPostBody\"}     \r\n          validate={[required, maxLength15]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: 'profileAddPostForm'})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import { addPost, deletePost } from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n  deletePost\r\n})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n  \r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n\r\n  }\r\n\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode} >\r\n            {props.status || '------'}\r\n          </span>\r\n        </div>\r\n      }\r\n      { editMode &&\r\n        <div>\r\n          <input\r\n            placeholder={'Введите статус'}\r\n            autoFocus\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport Avatar from '../../../assets/avatar.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  let contacts = profile.contacts\r\n  return (\r\n    <div>\r\n      <div className={styles.descriptionBlock}>\r\n        <img alt='' src={profile.photos.large || Avatar} />\r\n        <div>\r\n          <p>Name: <strong>{profile.fullName}</strong></p>\r\n          <ProfileStatusWithHooks \r\n            status={status}\r\n            updateStatus={updateStatus}\r\n          />\r\n          <p>Looking for a job: <strong>{profile.lookingForAJobDescription}</strong></p>\r\n          <p>About Me: <strong>{profile.aboutMe}</strong></p>\r\n          <div className={styles.contacts}>\r\n            <h3>Contacts:</h3>\r\n            <p>Facebook: <strong>{contacts.facebook}</strong></p>\r\n            <p>Website: <strong>{contacts.website}</strong></p>\r\n            <p>VK: <strong>{contacts.vk}</strong></p>\r\n            <p>Twitter: <strong>{contacts.twitter}</strong> </p>\r\n            <p>Instagram: <strong>{contacts.instagram}</strong> </p>\r\n            <p>Youtube: <strong>{contacts.youtube}</strong> </p>\r\n            <p>Github: <strong>{contacts.github}</strong> </p>\r\n            <p>mainLink: <strong>{contacts.mainLink}</strong> </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nclass Profile extends React.Component {\r\n\r\n  shouldComponentUpdate = (nextProps) => {\r\n    if (nextProps !== this.props) {\r\n      return true\r\n    }  \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ProfileInfo\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n        <MyPostsContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../Redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) { \r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    } \r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n        <Profile \r\n          {...this.props} \r\n          profile={this.props.profile} \r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter)\r\n  (ProfileContainer)\r\n\r\n"],"sourceRoot":""}